#include <iostream>
#include <vector>
#include <list>

using namespace std;
void print_DB1(list<vector<int>> &DB1);
void new_print_DB1(list<vector<int>> &DB1);
void print_DB2(vector<list<int>> &DB2);
void DB1_to_DB2(list<vector<int>> &DB1, vector<list<int>> &DB2);

int main() {
	list<vector<int>> DB1 = { {1,2,3}, {4,5}, {7,8,9,10} };
	vector<list<int>> DB2;
	print_DB1(DB1);
	new_print_DB1(DB1);
	DB1_to_DB2(DB1, DB2);
	print_DB2(DB2);
	getchar();
	getchar();
	return 0;
}




void print_DB1(list<vector<int>> &DB1) {
	list<vector<int>>::iterator it1 = DB1.begin();
	while (it1 != DB1.end()) {
		vector<int>::iterator it2 = it1->begin();
		while (it2 != it1->end()) {
			cout << *it2 << " ";
			it2++;
		}
		cout << endl;
		it1++;
	}
}

void new_print_DB1(list<vector<int>> &DB1) {
	list<vector<int>>::iterator it1 = DB1.begin();
	while (it1 != DB1.end()) {
		for (size_t i = 0; i < it1->size(); i++) {
			cout << (*it1)[i] << " ";
		}
		cout << endl;
		it1++;
	}




}
void print_DB2(vector<list<int>> &DB2) {
	vector<list<int>>::iterator it1=DB2.begin();
	while (it1!= DB2.end()) {
		list<int>::iterator it2 = it1->begin();
		while (it2 != it1->end()) {
			cout << *it2 << " ";
			it2++;
		}
		cout << endl;
		it1++;
	}
}

void DB1_to_DB2(list<vector<int>> &DB1, vector<list<int>> &DB2) {
	list<vector<int>>::iterator it1 = DB1.begin();
	while (it1 != DB1.end()) {
		list<int> temp;
		vector<int>::iterator it2 = it1->begin();
		while (it2 != it1->end()) {
			temp.push_back(*it2);
			it2++;
		}
		DB2.push_back(temp);
		it1++;
	}
}